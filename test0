import math
import numpy
from matplotlib import pyplot

N = 200                                # number of points in each direction
x_start, x_end = -4.0, 4.0            # boundaries in the x-direction
y_start, y_end = -2.0, 2.0            # boundaries in the y-direction
x = numpy.linspace(x_start, x_end, N)    # creates a 1D-array with the x-coordinates
y = numpy.linspace(y_start, y_end, N)    # creates a 1D-array with the y-coordinates
U_inf=1.0
V_inf=0.2

class sourceSink:
    def __init__(self,strength,x,y):
        self.strength=strength
        self.x=x
        self.y=y

    def get_velocity(self, X, Y):
        """Returns the velocity field generated by a source/sink.
    
        Arguments
        ---------
        """
        u = self.strength/(2*numpy.pi)*(X-self.x)/((X-self.x)**2+(Y-self.y)**2)
        v = self.strength/(2*numpy.pi)*(Y-self.y)/((X-self.x)**2+(Y-self.y)**2)
    
        return u, v



    def get_stream_function(self, X, Y):
        """Returns the stream-function generated by a source/sink.
    
        Arguments
        ---------
        strength -- strength of the source/sink.
        xs, ys -- coordinates of the source/sink.
        X, Y -- mesh grid.
        """
        psi = self.strength/(2*numpy.pi)*numpy.arctan2((Y-self.y), (X-self.x))
    
        return psi





X, Y = numpy.meshgrid(x, y)              # generates a mesh grid


strength_source = 5.0                      # source strength
x_source, y_source = -1.0, 0.0             # location of the source

s=[sourceSink(5.0,-1.0,0.0),sourceSink(-5.0,1.0,0.0)]


u,v=U_inf,V_inf
psi=0

for si in s:
    u,v+=get_velocity(si , X, Y)
    psi+=get_stream_function(si , X, Y)
# computes the velocity field on the mesh grid


u_source, v_source = get_velocity(s[0] , X, Y)+get_velocity(s[1] , X, Y)
psi_source = get_stream_function(s[0] , X, Y)+get_stream_function(s[1] , X, Y)



strength_sink = -5.0 *10.                    # strength of the sink
x_sink, y_sink = 0.0, 0.0                # location of the sink

# computes the velocity on the mesh grid
u_sink , v_sink = get_velocity(strength_sink, x_sink, y_sink, X, Y)
psi_sink = get_stream_function(strength_sink, x_sink, y_sink, X, Y)


# computes the velocity of the pair source/sink by superposition
u_pair = u_source + u_sink + U_inf
v_pair = v_source + v_sink + V_inf
psi=psi_source+psi_sink
print 'y = ', y
# plots the streamlines of the pair source/sink
size = 10
pyplot.figure(figsize=(size, (y_end-y_start)/(x_end-x_start)*size))
pyplot.xlabel('x', fontsize=16)
pyplot.ylabel('y', fontsize=16)
pyplot.xlim(x_start, x_end)
pyplot.ylim(y_start, y_end)
pyplot.streamplot(X, Y, u_pair, v_pair, density=2.0, linewidth=1, arrowsize=2, arrowstyle='->')
pyplot.scatter([x_source, x_sink], [y_source, y_sink],color='#CD2305', s=80, marker='o', linewidth=0)

# calculates the stagnation point
x_stagnation = x_source - strength_source/(2*numpy.pi*U_inf)
y_stagnation = y_source - strength_source/(2*numpy.pi*V_inf)

# adding the stagnation point to the figure
pyplot.scatter(x_stagnation, y_stagnation, color='g', s=80, marker='o')

# adds the dividing line to the figure
pyplot.contour(X, Y, psi, 
            levels=[-strength_source/2, +strength_source/2], 
            colors='#CD2305', linewidths=2, linestyles='solid');




pyplot.show()

